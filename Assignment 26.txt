1.
#include<iostream>
using namespace std;

class complex
{
    int a,b;
    public:
    complex add(complex c)
    {
        complex temp;
        temp.a = a + c.a;
        temp.b = b + c.b;
        return temp;
    }
    void setData(int x,int y)
    {
        a=x;
        b=y;
    }
    void showData()
    {
        cout<<"real = "<<a<<" imaginary = "<<b<<endl;
    }
};

int main()
{
   complex c1,c2,c3;
   c1.setData(3,4);
   c2.setData(1,2);
   c1.showData();
   c2.showData();
   c3 = c1.add(c2);
   cout<<"after addition:"<<endl;
   c3.showData();
   return 0;
}
2.
#include<iostream>
using namespace std;

class Time
{
    int h,m,s;
    public:
    void setTime(int x,int y,int z)
    {
        h=x;
        m=y;
        s=z;
    }
    void showTime()
    {
        cout<<"hour = "<<h<<" minutes = "<<m<<" seconds = "<<s<<endl;
    }
    void normalize()
    {
        m = m + s/60;
        s = s%60;
        h = h + m/60;
        m = m%60;
    }
    Time add(Time t)
    {
        Time temp;
        temp.h = h + t.h;
        temp.m = m + t.m;
        temp.s = s + t.s;
        return temp;
    }
};

int main()
{
    Time t1,t2,t3;
    t1.setTime(11,25,44);
    t2.setTime(2,55,51);
    t1.showTime();
    t2.showTime();
    t3 = t1.add(t2);
    t3.showTime();
    t3.normalize();
    t3.showTime();
}
3.
#include<iostream>
using namespace std;

class cube
{
    int l,b,h,v;
    public:
    cube()
    {
        l=1;
        b=1;
        h=1;
        v=1;
    }
    void setDimension(int x,int y,int z)
    {
       l = x;
       b = y;
       h = z;
       v=l*b*h;
    }
    void showVolume()
    {
       cout<<"volume = "<<v<<endl;
    }
};

int main()
{
    cube c1,c2;
    c1.showVolume(); // volume set by constructor.
    c2.setDimension(4,3,2);
    c2.showVolume();
}
4.
#include<iostream>
using namespace std;

class counter
{
   int count;
   public:
   counter()
   {
      count=0;
   }
   void inc_count()
   {
      count++;
   }
   void showCount()
   {
      cout<<"count is "<<count<<endl;
   }
};

int main()
{
   counter c1,c2;
   c1.showCount(); // set by constructor.
   cout<<endl;
   // counter of 5.
   cout<<"counter of 5"<<endl;
   for (int i = 0; i < 5; i++)
   {
      c2.showCount();
      c2.inc_count();
   }
   return 0;
}
5.
#include<iostream>
using namespace std;

class Date
{
   int day,month,year;
   public:
   Date()
   {
     day=01;
     month=01;
     year=1999;
   }
   void setDate(int x,int y,int z)
   {
      day=x;
      month=y;
      year=z;
   }
   void showDate()
   {
      cout<<day<<"/"<<month<<"/"<<year<<endl;
   }
};

int main()
{
    Date d1,d2;
    d1.showDate();
    d2.setDate(20,06,2003);
    d2.showDate();
    return 0;
}
6.
#include<iostream>
#include<string.h>
using namespace std;

class student
{
    char name[30];
    int age;
    int roll_no;
    float percentage;
    long long int contact_no;
    public:
    student()
    {
        strcpy(name,"siddharth pilkhn");
        age = 15;
        roll_no = 44;
        percentage = 93.2;
        contact_no = 8595155587;
    }
    void showDetails()
    {
        cout<<"---Student details---"<<endl;
        cout<<"Name:"<<name<<endl;
        cout<<"Age:"<<age<<endl;
        cout<<"Roll-No:"<<roll_no<<endl;
        cout<<"Percentage:"<<percentage<<endl;
        cout<<"Contact-No:"<<contact_no<<endl;
    }
};

int main()
{
    student s1;
    s1.showDetails();
    return 0;
}
7.
#include<iostream>
using namespace std;

class Box
{
    int length,breadth,height,volume;
    public:
    Box()
    {
        length=1;
        breadth=1;
        height=1;
        volume=1;
    }
    void setDimension(int x,int y,int z)
    {
       length = x;
       breadth = y;
       height = z;
       volume = length*breadth*height;
    }
    void showVolume()
    {
       cout<<"volume of Box = "<<volume<<" units^3"<<endl;
    }
};

int main()
{
    Box b1,b2;
    b1.showVolume(); // volume set by constructor.
    b2.setDimension(4,3,2);
    b2.showVolume();
    return 0;
}
8.
#include<iostream>
using namespace std;

class Bank
{
    int principal,rate,year;
    float SI;
    public:
    Bank()
    {
        principal=10;
        rate=3.57;
        year=3;
    }
    void set(int x,int y,int z)
    {
       principal = x;
       rate = y;
       year = z;
    }
    float simpleIntrest()
    {
        SI = (principal*rate*year)/100.0;
        return SI;
    }
    void Display()
    {
       cout<<"Simple Intrest = "<<simpleIntrest()<<endl;
    }
};

int main()
{
    Bank b1,b2;
    b1.Display(); 
    return 0;
}
9.
#include<iostream>
#include<string.h>
using namespace std;

class Bill
{
   char name[20];
   int age;
   int cust_id;
   char state[20];
   public:
   void get()
   {
      cout<<"Enter customer Id:";
      cin>>cust_id;
      cout<<"Enter your name:";
      cin>>fgets(name,20,stdin);
      cout<<"Enter your age:";
      cin>>age;
      cout<<"Enter your state in which you live:";
      cin>>fgets(state,20,stdin);
   }
   void showDetails()
   {
      cout<<"---Customer Details---"<<endl;
      cout<<"Name:"<<name<<endl;
      cout<<"Age:"<<age<<endl;
      cout<<"Customer Id:"<<cust_id<<endl;
      cout<<"State:"<<state<<endl;
   }
   float calculateBill(float units)
   {
      if(units<=100)
      {
        return (units*1.20); 
      }else if(units>100 && units<=200)
      {
        return (100*1.20 + (units-100)*2);
      }else if(units>200){
        return (100*1.20 + 100*2 + (units-200)*3);
      }
      return 0;
   }
   void showBill(int x)
   {
     cout<<"Bill = "<<calculateBill(x)<<endl;;
   }
};

int main()
{
    Bill b1,b2,b3;
    b1.get();
    cout<<endl;
    b1.showDetails();
    cout<<endl;
    b1.showBill(76);
    b2.showBill(153);
    b3.showBill(226);
    return 0;
}
10.
#include<iostream>
using namespace std;

class StaticCount
{
    static int x;
    public:
    void Increment()
    {
        x++;
    }
    void display()
    {
        cout<<x<<endl;
    }
};
int StaticCount::x;
int main()
{
    StaticCount s;
    s.Increment();
    s.Increment();
    s.Increment();
    s.display();
    return 0;
}