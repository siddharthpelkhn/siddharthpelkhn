1.
#include<iostream>
#include<set>
#include<iterator>
using namespace std;
int main()
{
    set<int> s;
    s.insert(1);
    s.insert(4);
    s.insert(4);
    s.insert(10);
    s.insert(5);
    cout<<"No. of elements:"<<s.size();
    return 0;
}
2.
#include<iostream>
#include<set>
#include<iterator>
using namespace std;
int main()
{
    set<int> s;
    s.insert(2);
    s.insert(3);
    s.insert(8);
    s.insert(5);
    set<int>::iterator x;
    cout<<"-----set-----"<<endl;
    for(x=s.begin();x!=s.end();x++)
    {
        cout<<*x<<" ";
    }
    return 0;
}
3.
#include<iostream>
#include<set>
#include<iterator>
using namespace std;
int main()
{
    set<int> s;
    s.insert(4);
    s.insert(7);
    s.insert(7);
    s.insert(5);
    s.insert(1);
    set<int>::iterator x;
    cout<<"Set before erase"<<endl;
     for(x=s.begin();x!=s.end();x++)
    {
        cout<<*x<<" ";
    }
    cout<<endl<<"Set after erase"<<endl;
    s.erase(1);
    for(x=s.begin();x!=s.end();x++)
    {
        cout<<*x<<" ";
    }
}
4.
#include<iostream>
#include<set>
#include<iterator>
using namespace std;
int main()
{
    set<int> s;
    // if statement will execute when set is empty.
    if(s.empty())
    {
       s.insert(4);
       s.insert(7);
       s.insert(7);
       s.insert(5);
       s.insert(1);
    }
    set<int>::iterator x;
     for(x=s.begin();x!=s.end();x++)
    {
        cout<<*x<<" ";
    }
}
5.
#include<iostream>
#include<set>
#include<iterator>
using namespace std;
int main()
{
    set<int> s;
    for(int i=0;i<5;i++)
    {
        s.insert(i);
    }
    set<int>::iterator x;
    cout<<"Set"<<endl;
     for(x=s.begin();x!=s.end();x++)
    {
        cout<<*x<<" ";
    }
}
6.
#include<iostream>
#include<set>
#include<iterator>
using namespace std;
int main()
{
    set<int> s;
    s.insert(1);
    s.insert(3);
    s.insert(4);
    s.insert(6);
    s.insert(7);
    set<int>::iterator x;
    cout<<"Set"<<endl;
    for(x=s.begin();x!=s.end();x++)
    {
        cout<<*x<<" ";
    }
    auto ptr = s.lower_bound(2);\
    // this function returns the pointer of element grater or 
    // equal to the element passed into the function.
    // and if passed element is grater than the largest element
    // of set then it will return pointer of last element.
    if(ptr!=s.end())
    {
        cout<<endl<<"lower bound of 2 is "<<*ptr;
    }else{
        cout<<endl<<"The entered element is larger than the gratest element."<<endl;
    }
    return 0;
}
7.
#include<iostream>
#include<set>
#include<iterator>
using namespace std;
int main()
{
    set<int> s;
    s.insert(1);
    s.insert(3);
    s.insert(4);
    s.insert(6);
    s.insert(7);
    set<int>::iterator x;
    cout<<"Set"<<endl;
    for(x=s.begin();x!=s.end();x++)
    {
        cout<<*x<<" ";
    }
    auto ptr = s.upper_bound(4);\
    // this function returns the pointer of element grater 
    // than passed element into the function.
    // and if passed element is grater than the largest element
    // of set then it will return pointer of last element.
    if(ptr!=s.end())
    {
        cout<<endl<<"lower bound of 4 is "<<*ptr;
    }else{
        cout<<endl<<"The entered element is larger than the gratest element."<<endl;
    }
    return 0;
}
8.
#include<iostream>
#include<set>
#include<iterator>
using namespace std;
int search(set<int> &s,int search)
{
   set<int>::iterator x;
   for(x=s.begin();x!=s.end();x++)
   {
      if(search==*x)
      return 1;
   }
   return 0;
}
int main()
{
    set<int> s{1,3,3,4,6,8};
    int x;
    cout<<"Enter element you want to search:";
    cin>>x;
    if(search(s,x))
    {
        cout<<"Element is present!"<<endl;
    }else{
        cout<<"Element is not present!"<<endl;
    }
    return 0;
}
9.
#include<iostream>
#include<set>
using namespace std;
int main()
{
    string name = "siddharth";
    set<char> s(name.begin(),name.end());
    for(auto ptr : s)
    {
        cout<<ptr<<" ";
    }
    return 0;
}
10.
#include<iostream>
#include<set>
#include<array>
#include<iterator>
using namespace std;
int main()
{
    set<int> s{1,2,3,4,5,6,6,8,9};
    array<int,9> arr{1,2,3,4,5,6,6,8,9};
    int ans;
    for(int i=0;i<arr.size();i++)
    {
        if(arr[i]==arr[i+1])
        {
            cout<<"Number that occur twice = "<<arr[i]<<endl;
            ans = arr[i] + 1;
            cout<<"Missing number = "<<ans<<endl;
            break;
        }
    }
    return 0;
}
