1.
#include<stdio.h>
int max(int arr[],int);
int main()
{
    int n,i;
    printf("Enter size of array: ");
    scanf("%d",&n);
    int a[n];
    for ( i = 0; i < n; i++)
    {
        printf("Enter %d element of array: ",i+1);
        scanf("%d",&a[i]);
    }
    printf("Array is:\n");
    for ( i = 0; i < n; i++)
    {
        printf("%d ",a[i]);
    }
    printf("\ngratest element is %d",max(a,n));
    return 0;
}
int max(int b[],int size)
{
    int max,i;
    max=b[0];
    for ( i = 0; i < size; i++)
    {
        if(b[i]>max)
        {
            max=b[i];
        }
    }
    return max;
}
2.
#include<stdio.h>
int max(int arr[],int);
int main()
{
    int n,i;
    printf("Enter size of array: ");
    scanf("%d",&n);
    int a[n];
    for ( i = 0; i < n; i++)
    {
        printf("Enter %d element of array: ",i+1);
        scanf("%d",&a[i]);
    }
    printf("Array is:\n");
    for ( i = 0; i < n; i++)
    {
        printf("%d ",a[i]);
    }
    printf("\nsmallest element is %d",min(a,n));
    return 0;
}
int min(int b[],int size)
{
    int min,i;
    min=b[0];
    for ( i = 0; i < size; i++)
    {
        if(b[i]<min)
        {
            min=b[i];
        }
    }
    return min;
}
3.
#include<stdio.h>
#include<stdlib.h>
void sort(int,int arr[]);
int main()
{
    int n,i;
    printf("Enter size of array: ");
    scanf("%d",&n);
    int arr[n];
    for ( i = 0; i < n; i++)
    {
        printf("Enter %d element of array: ",i+1);
        scanf("%d",&arr[i]);
    }
    sort(n,arr);
    printf("sorted array:\n");
    for ( i = 0; i < n; i++)
    {
        printf("%d ",arr[i]);
    }
    return 0;
}
void sort(int n,int arr[n])
{
    int i,j,temp;
    for ( i = 0; i < n-1; i++)
    {
        for ( j = 0; j < n-i-1; j++)
        {
            if(arr[j]>arr[j+1])
            {
                temp = arr[j];
                arr[j] = arr[j+1];
                arr[j+1] = temp;
            }
        }
    }
}
4.
#include<stdio.h>
#include<stdlib.h>
void shift_left(int arr[],int,int);
void shift_right(int arr[],int,int);
void display(int arr[],int);
int main()
{
    int arr[5]={32, 29, 40, 12, 70};
    int x,n,s;
    s = sizeof(arr)/sizeof(arr[0]);
    printf("-->press 1 for left rotation.\n");
    printf("-->press 2 for right rotation.\n");
    printf("Enter your choice: ");
    scanf("%d",&x);
    switch (x)
    {
    case 1:
        printf("by how many position you want to rotate: ");
        scanf("%d",&n);
        shift_left(arr,s,n);
        display(arr,s);
        break;
    case 2:
        printf("by how many position you want to rotate: ");
        scanf("%d",&n);
        shift_right(arr,s,n);
        display(arr,s);
        break;
    default:
        break;
    }
    return 0;
}
void shift_left(int b[],int size,int n)
{
    int i,j,temp;
    for ( i = 0; i < n; i++)
    {
        temp = b[0];
        for ( j = 0; j < size; j++)
        {
            b[j] = b[j+1];
        }
        b[size-1] = temp;
    }   
}
void shift_right(int b[],int size,int n)
{
    int i,j,temp;
    for ( i = 0; i < n; i++)
    {
        temp = b[size-1];
        for ( j = size-1; j > 0; j--)
        {
            b[j] = b[j-1];
        }
        b[0] = temp;
    }   
}
void display(int b[],int size)
{
    int i;
    for ( i = 0; i < size; i++)
    {
        printf("%d ",b[i]);
    }
}
5.
#include<stdio.h>
int duplicate(int*,int);
int main()
{
    int arr[]={1,3,4,1,1,3,6,7,7,9};
    int n=(sizeof(arr)/sizeof(arr[0]));
    int x;
    x=duplicate(arr,n);
    printf("First adjacent duplicate value is %d",x);
    return 0;
}
int duplicate(int arr[],int n)
{
    int i;
    for(i=0;i<n;i++)
    {
        if(arr[i]==arr[i+1])
        {
            return arr[i];
        }
    }
}
6.
#include<stdio.h>
void display(int*,int);
void reverse(int*,int);
int main()
{
    int arr[6]={12,20,15,33,49,61};
    int n=sizeof(arr)/sizeof(arr[0]);
    reverse(arr,n);
    return 0;
}
void reverse(int arr[],int n)
{
    int i;
    for ( i = n-1; i >= 0; i--)
    {
        printf("%d ",arr[i]);
    }
}
void display(int b[],int size)
{
    int i;
    for ( i = 0; i < size; i++)
    {
        printf("%d ",b[i]);
    }
}
7.
#include<stdio.h>
int duplicate(int*,int);
int main()
{
    int arr[]={1,3,8,4,1,1,3,6,7,8,7,1,1,9};
    int n=(sizeof(arr)/sizeof(arr[0]));
    int x;
    x=duplicate(arr,n);
    printf("\nTotal number of duplicate elements = %d",x);
    return 0;
}
int duplicate(int arr[],int n)
{
    int i,j,count=0;
    int temp=-1;
    for(i=0;i<n;i++)
    {
       for(j=i+1;j<n;j++)
       {
          if(arr[i]==arr[j])
          {
             count++;
             break;
          }
        }
    }
    return count;
}
8.
#include<stdio.h>
void unique(int*,int);
int main()
{
    int arr[]={4,2,1,7,1,2,9,6,8,7,1,5};
    int n;
    n=sizeof(arr)/sizeof(arr[0]);
    printf("Unique elements of array are:\n");
    unique(arr,n);
    return 0;
}
void unique(int arr[],int n)
{
    int i,j,flag=0;
    for ( i = 0; i < n; i++)
    {
        flag=0;
        for ( j = 0; j < n; j++)
        {
            if(arr[i]==arr[j] && j!=i)
            {
                flag=1;
                break;
            }
        }

        if(flag==0)
        {
            printf("%d ",arr[i]);
        }
    }
}
9.
#include<stdio.h>
void merge(int*,int*,int*,int);
int main()
{
    int a[]={50,40,30,20,10};
    int b[]={45,35,25,15,5};
    int n;
    n=sizeof(a)/sizeof(a[0]);
    int c[2*n];
    merge(a,b,c,n);
    for (int i = 0; i < 10; i++)
    {
        printf("%d ",c[i]);
    }
    return 0;
}
void merge(int a[],int b[],int c[],int n)
{
    int i=0,j=0,k=2*n-1;
    while(i<5 || j<5)
    {
        if(a[i]>b[j])
        {
           c[k]=a[i];
           i++;
        }else{
            c[k]=b[j];
            j++;
        }
        k--;
        if(k<0){
            k++;
        }
    }
}
10.
#include<stdio.h>
void frequency(int*,int);
int main()
{
    int arr[]={1,3,2,5,6,2,4,8,6,7,1,3,9,8,13,20};
    int n=sizeof(arr)/sizeof(arr[0]);
    frequency(arr,n);
    return 0;
}
int max(int arr[],int n)
{
    int temp=arr[0];
    for (int i = 1; i < n; i++)
    {
        if(arr[i]>temp)
        {
            temp=arr[i];
        }
    }
    return temp;
}
void frequency(int arr[],int n)
{
    int m,i;
    m=max(arr,n);
    int count[1000]={0};
    for ( i = 0; i < n; i++)
    {
        count[arr[i]]++;
    }
    printf("digit\t:  frequency\n");
    for ( i = 0; i <= m; i++)
    {
        if(count[i]!='\0')
        printf("%d\t:\t%d\n",i,count[i]);
    }
}
