1.
#include<iostream>
#include<vector>
#include<iterator>
using namespace std;
int main()
{
    vector<int> v{10,20,30,40,50};
    vector<int>::iterator x;
    for(x=v.begin();x!=v.end();x++)
    {
        cout<<*x<<" ";
    }
    return 0;
}
2.
#include<iostream>
#include<iterator>
#include<vector>

using namespace std;

int main()
{
   vector<int> v;
   v.push_back(10);
   v.push_back(20);
   v.push_back(30);
   v.push_back(40);
   vector<int>::iterator x;
   for(x=v.begin();x!=v.end();x++)
   {
      cout<<*x<<" ";
   }
   return 0;    
}
3.
#include<iostream>
#include<vector>
#include<iterator>
using namespace std;

int main()
{
    int n,temp;
    cout<<"Enter number of elements:";
    cin>>n;
    vector<int> v;
    for(int i=0;i<n;i++)
    {
        cin>>temp;
        v.push_back(temp);
    }
    v.shrink_to_fit();
    vector<int>::iterator x;
    for(x=v.begin();x!=v.end();x++)
    {
        cout<<*x<<" ";
    }
    return 0;
}
4.
#include<iostream>
#include<vector>
#include<iterator>
using namespace std;
int main()
{
    vector<int> vect1{5,10,15,20,15};
    vector<int> vect2;
    for(int i=0;i<vect1.size();i++)
    {
        vect2.push_back(vect1[i]);
    }
    vector<int>::iterator x;
    vector<int>::iterator y;
    cout<<"Element of vector 1\n";
    for(x=vect1.begin();x!=vect1.end();x++)
    {
        cout<<*x<<" ";
    }
    cout<<endl;
    cout<<"Element of vector 2\n";
    for(y=vect2.begin();y!=vect2.end();y++)
    {
        cout<<*y<<" ";
    }
    return 0;
}
5.
#include<iostream>
#include<vector>
#include<iterator>
using namespace std;
int main()
{
    vector<int> v{29,19,8,13,2,76,44};
    int min,max;
    max=min=v[0];

    vector<int>::iterator x;
    for(x=(v.begin()+1);x!=v.end();x++)
    {
        if(*x>max)
        max=*x;
        else if(min>*x)
        min=*x;
    }
    cout<<"minimum element in vector = "<<min<<endl;
    cout<<"maximum element in vector = "<<max<<endl;
    return 0;
}
6.
#include<iostream>
#include<vector>
#include<iterator>
using namespace std;

int main()
{
    int temp;
    vector<int> v{10,20,30,40,50};
    for(int i=0;i<v.size()/2;i++)
    {
        temp=v[i];
        v[i]=v[v.size()-i-1];
        v[v.size()-i-1]=temp;
    }
    vector<int>::iterator x;
    cout<<"Reverse vector:\n";
    for(x=v.begin();x!=v.end();x++)
    {
        cout<<*x<<" ";
    }
    return 0;
}
7.
#include<iostream>
#include<vector>

using namespace std;

int main()
{
    vector<int> v{1,2,3,4,5,6};
    int sum=0;
    vector<int>::iterator x;
    for(x=v.begin();x!=v.end();x++)
    {
        sum+=*x;
    }
    cout<<"sum of elements of vector:"<<sum<<endl;
    return 0;
}
8.
#include<iostream>
#include<vector>
#include<iterator>
using namespace std;
int main()
{
    vector<int> v1{10,20,30,40,50};
    vector<int> v2{30,40,50,60,70,80};
    cout<<"-----common elements between v1 and v2------"<<endl;
    for(int i=0;i<v1.size();i++)
    {
        for(int j=0;j<v2.size();j++)
        {
            if(v1[i]==v2[j])
            cout<<v2[j]<<" ";
        }
    }
    return 0;
}
9.
#include<iostream>
#include<vector>
#include<iterator>

using namespace std;

int main()
{
    vector<float> v;
    int n;
    float temp;
    cout<<"Enter how many elements you want to insert:";
    cin>>n;
    for(int i=0;i<n;i++)
    {
        cout<<"Enter "<<i+1<<" element:";
        cin>>temp;
        v.push_back(temp);
    }
    vector<float>::iterator x;
    cout<<"Array elements are:"<<endl;
    for(x=v.begin();x!=v.end();x++)
    {
        cout<<*x<<" ";
    }
    return 0;
}
10.
#include<iostream>
#include<vector>
#include<iterator>

using namespace std;

int main()
{
    vector<int> v{2,4,5,7,8,10};
    int search,flag=0;
    cout<<"Enter element you want to search:";
    cin>>search;
    vector<int>::iterator x;
    for(x=v.begin();x!=v.end();x++)
    {
        if(*x==search)
        {
            cout<<"Element Exists!"<<endl;
            flag=1;
            break;
        }
    }
    if(flag==0)
    {
        cout<<"Element not Exists!"<<endl;
    }
    return 0;
}
